###### Arch Setup for BIOS Baased Systems with KDE Plasma ###########


Boot the Archiso
Connect to the internet like you did before with iwctl

Ping google.com or Archlinux.org with the command
        ping -c 2 archlinux.org

If you get responses; congrats you are connected. YAY!


Check the time and date with timedatectl  (This is a systemd command and systemd is what spawns all your processes)
        If the date looks good continue, otherwise reboot into your bios and set the correct date and time and boot arch again

partition your disk with cfdisk /dev/nvme0n1 which is your system disk.
        cfdisk /dev/nvme0n1
        Enter

*******Ensure that you've BACKED UP any data you need prior to moving forward*******
*******These Steps will Destroy Your DATA **************

Delete any existing partitions and write this to disk.


Then create a new partition and choose GPT for the partition scheme (This is for large Disks that aren't supported by Legacy BIOS - compatability)


Create a 512mb MBR partition and make this a Primary partition such that the BIOS knows to boot from this partition. Later we will install the
GRUB boot loader to this partition.

            *****MARK Your partition /dev/nvme0n1p1 as Primary and Boot********

You can set up the partitions to use the amount of space that suits you. For this Guide, I suggest the following --


Create a Linux Partition that takes up roughly the entire Disk using numbers and Designate the size with letters GB for gigabyte. Leave 2gb of space
for your swap partition which we will create next

Create a 2gb swap partition ( not that this does not need to be formatted)

Write out the newly created partition table and quit cfdisk.

Now you need to format the MBR partition and the Linux File Systtem

To Do So, run the following commands

            mkfs.vfat -n BOOT /dev/nvme0n1p1
            mkfs.btrfs -l LINUX /dev/nvme0n1p2
            mkswap -l SWAP /dev/nvme0n1p3

    ### please note that swap is optional, but desirable for Systems with Low ram ie; 8gb or less. If you have 12gb or more of ram, you could skip
    swap partition, with almost no performance issues.


In order for Linux to operate correctly and find your boo/root and home folders, we need to mount the Filesystems.
First we mount the Linux Filesystm, make a boot directory, and mount the Boot partition

        mount /dev/nvme0n1p2 /mnt
        mkdir /mnt/boot
        mount /dev/nvme0n1p1 /mnt/boot

If you created a swap partition, enable with
        swapon /dev/nvme0n1p3


Let's install some packages (this is my preference and should work for you at this point. You may wish to revise this list as you become an Arch Linux Pro)

    pacstrap -k base base-devel linux linux-lts linux-docs linux-lts-docs linux-headers linux-lts-headers linux-firmware bash nano vim code amd-ucode intel-ucode sddm
    plasma-meta packagekit-qt5 firewalld networkmanager plasma-nm dhcpd texinfo man-pages man-db tealdeer firefox chromium


Set up your File System Table as such

        genfstab -U /mnt >> /mnt/etc/fstab


Change Root into your new System

                arch-chroot /mnt

Set the timezone with

        ln -sf /usr/share/zoneinfo/Region/City /etc/localtime

########  For a List of available timezones run "timedatectl list-timezones"  WITHOUT the quotes ###########

        EXAMPLE:  ln -sf /usr/share/zoneinfo/America/New_York /etc/localtime

Set the Hardware Clock like so:

        hwclock --systohc

Set your Locale

    locale-gen

Create the Locale.conf file for proper time, currency, etc

    echo LANG=en_US.UTF-8

Set your Hostname

    echo SomeName >> /etc/hostname

    ****EXAMPLE echo MyPC >> /etc/hostname *******

Enable DHCP as Follows so you can get an IP Address

        systemctl enable dhcpcd

Enable your Window Greeter

        systemctl enable sddm

Create your initramfs or Initial RAM disk files to load the linux Kernel and Pivot Root

        mkinitcpio -P


Create a Regular Non-Root User

        useradd -m Ali

Set a password for Root and your regular users

        passwd User

            ****** Example passwd root and then enter the new password twice ********

Configure Pacman

            pacman-key --init
            pacman-key --populate archlinux
            pacman -Syy

Install Grub

        pacman -S grub grub-btrfs

Configure Grub

        grub-install --target=i386-pc /dev/nvme0n1
        grub-mkconfig -o /boot/grub/grub.cfg

Shutdown and remove the USB installer. Boot your system and login to KDE plasma

        exit
        shutdown now

remove the USB drive

Boot the system and login to KDE Plasma Desktop


********* NOTES - PLEASE READ **************

Arch is a pain in the ass to install. This is an example setup for use with BIOS/CSM setups as opposed to UEFI. (BIOS is the older firmware and UEFI is modern)

BIOS is the older firmware Standard and was replaced by EFI which is much more secure and Robust in it's feature set. BIOS = Basic Input Output System
EFI = Extensible Firmware Interface

Note that with Arch it assumes you're reading about all of the things you set up on your system. It's a very rewarding experience whether
or not you continue to use Arch. And I've found that it gives a decent understanding of how Linux works. As well as a Liberating feeling of
settting up your very own Linux environment.  After the initial teething issues, its quite easy to maintain.

I'd like to point out some notes on what I've tried to do hear, and caution that you may run into some challenges, which is expected for anyone.

Also note that there are two Disk Schemas - The Older Master Boot Record or MBR which BIOS based Systems use to look for meta data on the Device
And uses a concept called Primary and Secondary Partitions. You Can only Boot to a Primary Partition that is marked Boot. This is Done when creating
your parttition table in CFDisk

I've included commands to set up all parts of the system. Of Particular note is the pacstrap command. Here is a brief explanation of what we've done there

I've chosen both the rolling Linux kernel and the stable linux-lts kernels. LTS stands for long term support and implies that patches or improvements will
be added to this kernel as time goes on.

I've included Some editing tools such as nano, and vim for the command. We've included the plasma desktop along with the sddm login manager to make it easy
to login. Also included are a Firewall or firewalld which is a GUI firewall, firefox and chromium (Chrome) browsers. NetworkManager and plasma-nm to manage
your network connections, dhcpcd for grabbing an IP address automagically, and helper tools for searching the documentation. The Man pages are in depth
manual pages which can be a bit overwhelming because they were written by old men that don't communicate well outside os Nerd or L33t speak. I've also
included tealdeer which can be used to search commondly used commands and their options. You can invoke man pages or tealdeer as follows

        man command
        tldr command

        ***Replace command with the command you'd like assistance with *****


We then create the FSTAB which is used to mount your filesystems and then change root into your Arch system to configure things a bit further.

The steps can be followed as is, and will work without issues in a Perfect world. There may be some glitches along the way as partake on this journey.
The key is to remain calm and patient, and kick some ass.

You may also want to Disable the root account at some point and add your regular user to the sudoers group for security reasons. I have not covered this here,
and so I encourage you to read about this in the Arch Wiki and maybe even use ChatGPT for assistance.

If you  experience difficulty logging into KDE Plasma, use the ctrl+alt+f2 key combo to switch to tty2 and login as root at the command line for
troubleshooting and without the Graphical Desktop.

Finally, I want want to wish you good luck whether you decide to go forward with this adventure or not. I hope you do because it's a fun ride despite
the challenges that you might encounter.


Peace Out,
randomxusr











